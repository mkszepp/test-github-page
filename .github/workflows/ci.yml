name: CI

on:
  push:
    branches:
      - main
      - master
  pull_request: {}

concurrency:
   group: ci-${{ github.head_ref || github.ref }}
   cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 8

      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: pnpm

      - name: 'Install dependencies'
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm --filter ember-power-datepicker lint

  deploy-documentation:
    name: Deploy documentation
    runs-on: ubuntu-latest
    # needs: [lint, test]
    timeout-minutes: 5
    # Only run on pushes to the main branch or a tag (i.e. ignore pull requests and cron)
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    steps:
      - name: Check out a copy of the repo
        uses: actions/checkout@v4

      - name: Set a Git user
        run: |
          # Set a Git user for committing
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@users.noreply.github.com"

          # Copy the Git Auth from the local config
          git config --global "http.https://github.com/.extraheader" \
            "$(git config --local --get http.https://github.com/.extraheader)"

      - name: Set the version path
        # 'main' or 'v1.2.3'
        run: echo "ADDON_DOCS_VERSION_PATH=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          cache: 'pnpm'
          node-version: 18.x

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Deploy the latest documentation
        if: github.ref == 'refs/heads/main'
        run: pnpm build
        working-directory: 'test-app'
        env:
          # Rebuild the demo application
          ADDON_DOCS_UPDATE_LATEST: 'true'

      - name: Deploy the tagged documentation
        if: startsWith(github.ref, 'refs/tags/')
        run: pnpm build
        working-directory: 'test-app'
  
  test:
    name: "Tests"
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - uses: actions/checkout@v3
      
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 8
          
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: pnpm
          
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Run Tests
        run: pnpm --filter test-app test:ember

  floating:
    name: "Floating Dependencies"
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - uses: actions/checkout@v3
      
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 8
          
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: pnpm
          
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Run Tests
        run: pnpm --filter test-app test:ember

  try-scenarios:
    name: ${{ matrix.try-scenario }}
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: test

    strategy:
      fail-fast: false
      matrix:
        try-scenario:
          - ember-lts-3.28
          - ember-lts-4.4
          - ember-lts-4.8
          - ember-lts-4.12
          - ember-lts-5.4
          - ember-release
          - ember-beta
          - ember-canary
          - embroider-safe
          - embroider-optimized

    steps:
      - uses: actions/checkout@v3
      
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 8
          
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: pnpm
          
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Run Tests
        env:
          EMBER_TRY_SCENARIO: ${{ matrix.try-scenario }}
        run: pnpm --filter test-app test:ember-try $EMBER_TRY_SCENARIO

